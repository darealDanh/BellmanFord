// initiate this int main to run the code from tsm.cpp
#include "tsm.cpp"
#include "bellman.cpp"

void testTraveling2()
{
    int graph[20][20] = {
        {0, 23, 60, 39, 4, 94, 36, 89, 6, 0, -615998332, 32766, 0, 0, 0, 0, -1451630952, 32565, 814159578, 0},
        {4, 0, 19, 50, 52, 17, 95, 70, -615998192, 32766, -1449709071, 32565, 1, 0, -1449810304, 32565, 1, 0, 0, 0},
        {90, 46, 0, 63, 28, 76, 30, 39, -1449816064, 32565, -1449815192, 32565, 0, 0, 0, 0, 1, 0, 1, 32565},
        {13, 42, 96, 0, 26, 71, 18, 31, 0, 0, -1451927200, 32565, -1449685664, 32565, 1, 32565, -1, 0, -1450177476, 32565},
        {61, 10, 81, 84, 0, 70, 19, 55, -1449820300, 32565, -1449827776, 32565, -1449851880, 32565, -1449688681, 32565, 1, 0, 0, 0},
        {63, 21, 43, 33, 6, 0, 60, 85, -1449824255, 0, 6, 0, -1449824256, 32565, -615997136, 32766, -1449828136, 32565, -1449824255, 32565},
        {24, 54, 55, 80, 100, 84, 0, 7, -1449820960, 32565, 8064, 65535, -1449828344, 32565, -1449822560, 32565, -1449873728, 32565, 0, 0},
        {76, 80, 13, 55, 21, 8, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, -1, -1, -1, -1, 1664447571, 1701869940, 4547401, 0, 0, 0, 0, 0, 65280, 0, 0, 0},
        {791621423, 791621423, 791621423, 791621423, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1449824256, 32565, 0, 0, -1449849184, 32565, -1449873728, 32565, -1449828928, 32565},
        {-1449851880, 32565, -1451098568, 32565, -1449824256, 32565, -615997136, 32766, -1449824256, 32565, 6, 0, 6, 16, -642163968, 2104747404, 0, 0, -1449828712, 32565},
        {-1449828712, 32565, -1449828064, 32565, -1449820300, 32565, -1450437105, 32565, -1449828920, 32565, -1450653382, 32565, -1449828344, 32565, -1449828920, 32565, -1449830272, 32565, -1450652364, 32565},
        {-1449828640, 32565, -1449828640, 32565, -1449828352, 32565, -1451022080, 32565, -1451904280, 32565, -1453650393, 32565, 2045825361, 21883, 2045825032, 21883, -615996568, 32766, 1, 0},
        {-615996896, 32766, 2045815689, 21883, 640, 0, 65535, 1, -615996880, 32766, 2045815715, 21883, 2, 0, 2045815805, 21883, -1451904280, 32565, 2045815728, 21883}};
    int n = 8;
    char start_vertex = 'A';
    string path = Traveling(graph, n, 'A');
    cout << "The shortest path is: " << path << endl;
}

void testBF()
{
    int graph[20][20] = {
        {0, 72, 89, 77, 2, 58, 13, 69},  // A
        {77, 0, 69, 31, 57, 93, 83, 48}, // B
        {52, 21, 0, 62, 8, 77, 32, 14},  // C
        {33, 1, 40, 0, 72, 99, 72, 59},  // D
        {89, 24, 1, 61, 0, 12, 78, 63},  // E
        {36, 91, 98, 79, 26, 0, 28, 1},  // F
        {18, 77, 49, 36, 98, 77, 0, 45}, // G
        {75, 9, 59, 7, 77, 65, 45, 0}};  // H
    int value[20];
    int prev[20];
    for (int i = 0; i < 8; i++)
    {
        value[i] = -1;
        prev[i] = -1;
    }

    for (int i = 0; i < 8; i++)
    {
        cout << "Step: " << i + 1 << endl;
        BF(graph, 8, 'A', value, prev);
        for (int i = 0; i < 8; i++)
        {
            cout << value[i] << " ";
        }
        cout << endl;
        for (int i = 0; i < 8; i++)
        {
            cout << prev[i] << " ";
        }
        cout << endl;
    }
    cout << endl;
    for (int i = 0; i < 8; i++)
    {
        cout << value[i] << " ";
    }
    cout << endl;
    for (int i = 0; i < 8; i++)
    {
        cout << prev[i] << " ";
    }
    cout << endl;
}

void testPath()
{
    // use the testcases from the testBF()
    int graph[20][20] = {
        {0, 72, 89, 77, 2, 58, 13, 69},  // A
        {77, 0, 69, 31, 57, 93, 83, 48}, // B
        {52, 21, 0, 62, 8, 77, 32, 14},  // C
        {33, 1, 40, 0, 72, 99, 72, 59},  // D
        {89, 24, 1, 61, 0, 12, 78, 63},  // E
        {36, 91, 98, 79, 26, 0, 28, 1},  // F
        {18, 77, 49, 36, 98, 77, 0, 45}, // G
        {75, 9, 59, 7, 77, 65, 45, 0}};
    int value[20];
    int prev[20];
    for (int i = 0; i < 8; i++)
    {
        value[i] = -1;
        prev[i] = -1;
    }
    cout << "The shortest path from A to D is: " << BF_Path(graph, 8, 'A', 'D') << endl;
}

// void testPath2()
// {
//     int graph[20][20] = {
//         {0, 30, 42, 0, 0, 15, 0, 0, 0, 28},   // City A
//         {30, 0, 18, 25, 0, 0, 0, 0, 40, 12},  // City B
//         {42, 18, 0, 0, 33, 22, 0, 0, 0, 10},  // City C
//         {0, 25, 0, 0, 16, 0, 45, 20, 0, 0},   // City D
//         {0, 0, 33, 16, 0, 0, 30, 0, 22, 0},   // City E
//         {15, 0, 22, 0, 0, 0, 18, 35, 0, 0},   // City F
//         {0, 0, 0, 45, 30, 18, 0, 24, 0, 14},  // City G
//         {0, 0, 0, 20, 0, 35, 24, 0, 38, 0},   // City H
//         {0, 40, 0, 0, 22, 0, 0, 38, 0, 16},   // City I
//         {28, 12, 10, 0, 0, 0, 14, 0, 16, 0}}; // City J
//     int value[20];
//     int prev[20];
//     for (int i = 0; i < 10; i++)
//     {
//         value[i] = -1;
//         prev[i] = -1;
//     }
//     cout << BF_Path(graph, 10, 'A', 'G') << endl;
// }

int main()
{
    cout << "Test Bellman Ford: " << endl;
    testBF();
    cout << endl;
    cout << "Test Path: " << endl;
    testPath();
    cout << endl;
    cout << "Test Traveling: " << endl;
    testTraveling2();

    return 0;
}